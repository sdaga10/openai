

provider "aws" {
  region  = var.aws_region
}

variable "aws_region" {
  type    = string
  default = "us-east-1"
}

variable "eks_cluster_name" {
  type    = string
  default = "my-cluster"
}

variable "eks_node_group_name" {
  type    = string
  default = "my-node-group"
}

variable "eks_node_group_min_size" {
  type    = number
  default = 1
}

variable "eks_node_group_max_size" {
  type    = number
  default = 3
}

variable "eks_node_group_desired_capacity" {
  type    = number
  default = 1
}

variable "instance_type" {
  type    = string
  default = "t2.micro"
}

variable "subnet_ids" {
  type    = list
  default = []
}

resource "aws_eks_cluster" "my_cluster" {
  name     = var.eks_cluster_name
  role_arn = aws_iam_role.my_role.arn
  vpc_config {
    subnet_ids = var.subnet_ids
  }
}

resource "aws_iam_role" "my_role" {
  name               = "eks_role_${var.eks_cluster_name}"
  assume_role_policy = data.aws_iam_policy_document.assume_role_policy.json
}

data "aws_iam_policy_document" "assume_role_policy" {
  statement {
    actions = ["sts:AssumeRole"]

    principals {
      type        = "Service"
      identifiers = ["eks.amazonaws.com"]
    }
  }
}

resource "aws_iam_role_policy_attachment" "eks-policy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
  role       = aws_iam_role.my_role.name
}

resource "aws_eks_node_group" "my_node_group" {
  cluster_name    = aws_eks_cluster.my_cluster.id
  node_group_name = var.eks_node_group_name
  node_role_arn   = aws_iam_role.my_node_role.arn
  subnet_ids      = var.subnet_ids
  scaling_config {
    desired_size = var.eks_node_group_desired_capacity
    max_size     = var.eks_node_group_max_size
    min_size     = var.eks_node_group_min_size
  }
  instance_types  = [var.instance_type]
}

resource "aws_iam_role" "my_node_role" {
  name               = "eks_node_role_${var.eks_cluster_name}"
  assume_role_policy = data.aws_iam_policy_document.node_assume_role_policy.json
}

data "aws_iam_policy_document" "node_assume_role_policy" {
  statement {
    actions = ["sts:AssumeRole"]

    principals {
      type        = "Service"
      identifiers = ["ec2.amazonaws.com"]
    }
  }
}

resource "aws_iam_role_policy_attachment" "node-policy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
  role       = aws_iam_role.my_node_role.name
}

resource "aws_iam_role_policy_attachment" "node-self-policy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
  role       = aws_iam_role.my_node_role.name
}

resource "aws_iam_instance_profile" "my_profile" {
  name  = "instance_profile_${var.eks_cluster_name}"
  roles = [aws_iam_role.my_node_role.name]
}
