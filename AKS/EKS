

provider "azurerm" {
  features {}
}

variable "location" {
  type        = string
  description = "The Azure Region where the resources will be deployed"
  default     = "eastus"
}

variable "resource_group_name" {
  type        = string
  description = "The name of the Azure Resource Group"
  default     = "azure-eks-rg"
}

variable "cluster_name" {
  type        = string
  description = "The name of the Azure EKS Cluster"
  default     = "azure-eks-cluster"
}

variable "ssh_public_key" {
  type        = string
  description = "The SSH Public Key to use for authentication"
  default     = ""
}

variable "vnet_name" {
  type        = string
  description = "The name of the VNET to create"
  default     = "azure-eks-vnet"
}

variable "subnet_name" {
  type        = string
  description = "The name of the Subnet to create"
  default     = "azure-eks-subnet"
}

resource "azurerm_resource_group" "rg" {
  name     = var.resource_group_name
  location = var.location
}

resource "azurerm_virtual_network" "vnet" {
  name                = var.vnet_name
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
}

resource "azurerm_subnet" "subnet" {
  name                 = var.subnet_name
  resource_group_name  = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.vnet.name
  address_prefix       = "10.0.1.0/24"
}

resource "azurerm_kubernetes_cluster" "cluster" {
  name                = var.cluster_name
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  dns_prefix          = "azure-eks"

  default_node_pool {
    name       = "default"
    node_count = 1
    vm_size    = "Standard_D2s_v3"
  }

  service_principal {
    client_id     = ""
    client_secret = ""
  }

  network_profile {
    network_plugin    = "azure"
    service_cidr      = "10.0.0.0/16"
    dns_service_ip    = "10.0.0.10"
    docker_bridge_cidr = "172.17.0.1/16"
  }

  role_based_access_control {
    enabled = true
  }

  linux_profile {
    admin_username = "azureuser"

    ssh_key {
      key_data = var.ssh_public_key
    }
  }

  network_profile {
    network_plugin    = "azure"
    dns_service_ip    = "10.0.0.10"
    docker_bridge_cidr = "172.17.0.1/16"

    service_cidr = "10.0.0.0/16"

    load_balancer_sku = "standard"

    outbound_type = "loadBalancer"
  }

  addon_profile {
    http_application_routing {
      enabled = true
    }
  }
}
